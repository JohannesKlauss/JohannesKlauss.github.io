{"version":3,"sources":["webpack:///../docs/useIsHotkeyPressed.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"weASO,IAAMA,EAAe,Q,6MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,4BAAW,0BAAYC,WAAW,KAAvB,sBAAX,0BAAoG,0BAAYA,WAAW,KAAvB,qBAApG,yCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,qH,2MAUTJ,EAAWK,gBAAiB","file":"component---docs-use-is-hotkey-pressed-mdx-fda8ff14f8ee4f109a0f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/johannesklauss/Documents/Development/react-hotkeys-hook/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { useState } from 'react';\nimport { useHotkeys } from '../src';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"useishotkeypressed\"\n    }}>{`useIsHotkeyPressed`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useIsHotkeyPressed`}</inlineCode>{` hook just returns the `}<inlineCode parentName=\"p\">{`hotkeys.isPressed`}</inlineCode>{` function and works exactly the same.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const isPressed = useIsHotkeyPressed();\n\nisPressed(13); // Returns true if Return key is pressed down.\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}