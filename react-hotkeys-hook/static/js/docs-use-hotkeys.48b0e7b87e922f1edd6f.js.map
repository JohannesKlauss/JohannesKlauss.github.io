{"version":3,"sources":["/Users/johannesklauss/Documents/Development/react-keymap-hook/src/index.ts","/Users/johannesklauss/Documents/Development/react-keymap-hook/docs/useHotkeys.mdx"],"names":["useHotkeys","keys","callback","deps","arguments","length","undefined","memoisedCallback","useCallback","useEffect","hotkeys","unbind","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","objectWithoutProperties","index_es","assign","mdxType","id","parentName","className","href","index_esm","__position","__code","__scope","this","Playground","useState","__codesandbox","_useState","_useState2","slicedToArray","amount","setAmount","prevAmount","Math","abs","_useState3","_useState4","_useState5","_useState6","isMDXComponent"],"mappings":"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","file":"static/js/docs-use-hotkeys.6536460e.js","sourcesContent":["import hotkeys, {HotkeysEvent} from 'hotkeys-js';\nimport {useCallback, useEffect} from \"react\";\n\ntype CallbackFn = (event: KeyboardEvent, handler: HotkeysEvent) => void;\n\nexport function useHotkeys(keys: string, callback: CallbackFn, deps: any[] = []) {\n  const memoisedCallback = useCallback(callback, deps);\n\n  useEffect(() => {\n    hotkeys(keys, memoisedCallback);\n\n    return () => hotkeys.unbind(keys);\n  }, [memoisedCallback]);\n}\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { useState } from 'react';\nimport { useHotkeys } from '../src';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"usehotkeys\"\n    }}>{`useHotkeys`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useHotkeys`}</inlineCode>{` hook follows the hotkeys call signature.`}</p>\n    <p>{`The callback function takes the exact parameters as the callback function in the hotkeys package.\nSee hotkeys documentation for more info or look into the typings file.`}</p>\n    <p>{`When the component gets mounted into the DOM, it will listen for the keystroke. When the component will unmount, it\nstops listening for the keystroke.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`useHotkeys(keys: string, callback: (event: KeyboardEvent, handler: HotkeysEvent) => void, deps: any[] = [])\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"parameters\"\n    }}>{`Parameters`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`keys: string`}</inlineCode>{`: Here you can set the key strokes you want the hook to listen to. You can use single or multiple keys,\nmodifier combination, etc. See `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/jaywcjlove/hotkeys/#defining-shortcuts\"\n        }}>{`this`}</a>{`\nsection on the hotkeys documentation for more info.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`callback: (event: KeyboardEvent, handler: HotkeysEvent) => void`}</inlineCode>{`: Gets executed when the defined keystroke\ngets hit by the user. `}<strong parentName=\"li\">{`Important:`}</strong>{` Since version 1.5.0 this callback gets memoised inside the hook. So you don't have\nto do this anymore by yourself.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`deps: any[] = []`}</inlineCode>{`: The dependency array that gets appended to the memoisation of the callback. Here you define the inner\ndependencies of your callback. If for example your callback actions depend on a referentially unstable value or a value\nthat will change over time, you should add this value to your deps array. Since most of the time your callback won't\ndepend on any unstable callbacks or changing values over time you can leave this value alone since it will be set to an\nempty array by default. See the `}<a parentName=\"li\" {...{\n          \"href\": \"#memoisation\"\n        }}>{`Memoisation`}</a>{` section to\nlearn more and see an example where you have to set this array.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`This will listen to the `}<inlineCode parentName=\"p\">{`ctrl+k`}</inlineCode>{` keystroke. If you press it, the counter increments by one. If `}<inlineCode parentName=\"p\">{`ctrl+l`}</inlineCode>{` gets pressed,\nthe counter will decrement by one.`}</p>\n    <h3 {...{\n      \"id\": \"important-changes-since-150\"\n    }}>{`Important changes since 1.5.0!`}</h3>\n    <p>{`Due to the nature of how `}<inlineCode parentName=\"p\">{`useEffect`}</inlineCode>{` works, to prevent resetting the hotkeys handler during every render, before 1.5.0\nyou had to memoise your callback yourself. Since this is tedious work and dependency arrays are a common pattern inside\nReact hooks, I decided to bring the memoisation inside the hook, so you don't have to deal with it. Please read the\n`}<strong parentName=\"p\">{`Memoisation`}</strong>{` section for more info on this.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { useHotkeys } from 'react-hotkeys-hook';\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const AddToBankComponent = () => {\n  const [amount, setAmount] = useState(0);\n\n  useHotkeys('ctrl+a', () => setAmount(prevAmount => prevAmount + 100));\n  useHotkeys('ctrl+d', () => setAmount(prevAmount => prevAmount - 100));\n\n  return (\n    <div>\n      {amount >= 0 ? 'Add' : 'Remove'} {Math.abs(amount)} dollars {amount >= 0 ? 'from' : 'to'} my bank account.\n    </div>\n  );\n};\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const [amount, setAmount] = useState(0)\\n  useHotkeys(\\'ctrl+a\\', () => setAmount(prevAmount => prevAmount + 100))\\n  useHotkeys(\\'ctrl+d\\', () => setAmount(prevAmount => prevAmount - 100))\\n\\n  return (\\n    <div>\\n      {amount >= 0 ? \\'Add\\' : \\'Remove\\'} {Math.abs(amount)} dollars{\\' \\'}\\n      {amount >= 0 ? \\'from\\' : \\'to\\'} my bank account.\\n    </div>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      useState,\n      useHotkeys\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwdh5FdY12gPAAvP1-TtSDcjgGBnAILJUPQ2V5TNXCIPYKC8hgAAJERthgRI7DQo1KI9OABHIGj8PYQNJQok1NXaMFUF0FFjlOLCSMSLF2G4Oj1iiARnlQK52gABnYJMZiwdo92rGYOxYGdtIAFkM9gADZDOM9YwGAgAxb1oESbT-GcQ4EQdTAYKEfgliIahKDgMyESc6sXJoZwICwy52AARiskz5Ek6SpgAQTmZT2AjKDyBsKB0DDVCOWUsRCujGR2BRRSYG4YBsIUrF5C3GtgBK6ByuCAAyAbxkSeZKGaXqyoq7gZrlMBkMlAZUHadgAH4Nj6sMIyqq5Jv61BMurKQZCrN8zBhdVjhgMAwigKZtuq2qjry5dqwsYAHu4GrgBXCxsvYABtb02hoJYiIIHKwuQggAF0CoYkisgjHS3xrGsGOYghWPYx9JQEKAAGpXGMwqqq-hrR0hkGCAjfsYFYKnoceumGahzMCdSnSUdRtHCKYli2LgXHUUJ9ASc-mrwcZmhaa6VnqeZuXpamc1Oe5yTeYnUc-nMKM3t5mNZF-3ngGBpmxBUvT1vaHLOxW7SxTC1gYHaNDgD1aI8BwVwPCFs2aA5NCTgSVwBDgYAVtd420dNtmpgt9grbmmV7blCJXfYIhkg8dxdglKhoZwaPax3I39YsHmLHkQ7txe06zC_EBePISRVGwHACC0ChgP0Bg8Mu4YscFpZgEx7G4DPZ2aE4t12kH8fzU0ATLuABj7HiKAc52JYGLPMAwC2AgZ-NfhTUlfgVX9GhRu6deEi37ZXPMFSI3p_QrgAaTYrxQ_QSf9CWH4DAsAyzsDHoLf-AdHqsEoFwS-50sCCXmlJbs5gMYCxxuPK4KJpwpCWHEe-EpthXDvpvIhT8liYDuFcJEAM4YqToVVH61Z_pHjCtSdApCH7wyIlwohEYCFkO3ldO4H4NZ8z3gfSUEYJaqX1vPQWEZx6hRgOwoinCN4PzEVfNGXQCA61Jo9BR7EcDIQ8KoJRgttFVyWADNhsD1F8J2DDbRh1G5RW2K4NI_44DUEAroECBgwLMIsPwVA3pGRIHYPwH4xZqgZHND-MkkSTKhJAM7MOS1-BXH4DpHAeSdIhXWPwco5B-gzFQdk6JIAcoNTwrAaEWBvTJJEVASgiRcx5AKFrM05pYl_FLEU6s_AohoCqfwNuGg4BDLSVQugmApIQHgFUkJNYSlyXGSAFKOAABM-SZlrMEJqTZKU7I4AABw4DsgctJxi4CL2mVE_gSYrk4BSjsm51Sz4WitCcs5lzrkgHWIdeQjc4neA-NQSAKQfF-O0AE3uwT-C0B9FkbJMTTS0HNN880swZj8FBdXeQQA`} mdxType=\"Playground\">\n  {() => {\n        const [amount, setAmount] = useState(0);\n        useHotkeys('ctrl+a', () => setAmount(prevAmount => prevAmount + 100));\n        useHotkeys('ctrl+d', () => setAmount(prevAmount => prevAmount - 100));\n        return <div>\n    {amount >= 0 ? 'Add' : 'Remove'} {Math.abs(amount)} dollars {amount >= 0 ? 'from' : 'to'} my bank account.\n  </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"memoisation\"\n    }}>{`Memoisation`}</h2>\n    <p>{`Let's check out a slightly different example to see how memoisation effects your application.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const AddToBankComponent = () => {\n  const [amount, setAmount] = useState(0);\n\n  useHotkeys('n', () => setAmount(amount + 100), []);\n\n  return (\n    <div>\n      Add {Math.abs(amount)} dollars to my bank account.\n    </div>\n  );\n};\n`}</code></pre>\n    <Playground __position={1} __code={'() => {\\n  const [amount, setAmount] = useState(0)\\n  useHotkeys(\\'n\\', () => setAmount(amount + 100), [])\\n\\n  return <div>Add {Math.abs(amount)} dollars to my bank account.</div>\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      useState,\n      useHotkeys\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwdh5FdY12gPAAvP1-TtSDcjgGBnAILJUPQ2V5TNXCIPYKC8hgAAJERthgRI7DQo1KI9OABHIGj8PYQNJQok1NXaMFUF0FFjlOLCSMSLF2G4Oj1iiARnlQK52gABnYJMZiwdo92rGYOxYGdtIAFkM9gADZDOM9YwGAgAxb1oESbT-GcQ4EQdTAYKEfgliIahKDgMyESc6sXJoZwICwy52AARiskz5Ek6SpgAQTmZT2AjKDyBsKB0DDVCOWUsRCujGR2BRRSYG4YBsIUrF5C3GtgBK6ByuCAAyAbxkSeZKGaXqyoq7gZrlMBkMlAZUHadgAH4Nj6sMIyqq5Jv61BMurKQZCrN8zBhdVjhgMAwigKZtuq2qjry5dqwsYAHu4GrgBXCxsvYABtb02hoJYiIIHKwuQggAF0CoYkisgjHS3xrGsGOYghWPYx9lqWT6avByGQYICNgeh9gAGpUp0lGlgBmGzremsugIPpzBjWQcs7Oi9WiPAcFcDw4DJqGaA5NCTgSVwBDsCJ2CIZIPHcXYJSoaGcGO2MV3kQ7txe06zC_EBePISRVGwHACC0ChgP0Bg8Mu4YsbYuAlmATHsbgM9WH0Ti3XaZ2vfNTQBMu4AGPseIoGVnYlgYs8wDALYCH941-FNSV-BVf0aFG7oo4SWPtlc8wVIjGBfZoK4AGk2K8GX0B9_Qlj8DBYDLdhPdd5vxce1hKC4HPzqwQT5qk7tzAxljXYjL2rhRacUiWOIi4lbYrkLmP19LpZMDuK4kQZgqGaqn7q3-o8wupdAt-L-GiLv9eI1X7e46uu4P0kiwE6TlOIwJqpZmQdZ5e1CjAa-RFb7R2Ll_XOaNWbs0KlVL6vgZ7sRwMhDwqg56uzgRYJQgMr6DygU_HYjMc6HWNlFbYrg0j_jgNQQCugQIGDAufCw_BUDekZEgdg_AfjFmqBkc0P4yS8JMpwkAvtZZLX4FcfgOkcBKJ0iFdY_ByjkH6DMSe8j-EgByg1PCsBoRYG9OIj-UBKCJFzHkAoE5NTmkEX8Usajqz8CiGgPR_ALYaDgG4qR-86CYCkhAeAeiOE1g0XJbxIAUo4AAEzKICVEwQmpYkpTsjgAAHDgOyKSpEgPYiHfxfD-BJjyTgFKCSCn6MzhaK0GSsm5PySAdYh15DGyEd4D41BIApAYUw7QLD7bsP4LQH0WR5ECNNLQc09TzSzBmPwTput5BAA`} mdxType=\"Playground\">\n  {() => {\n        const [amount, setAmount] = useState(0);\n        useHotkeys('n', () => setAmount(amount + 100), []);\n        return <div>\n    Add {Math.abs(amount)} dollars to my bank account.\n  </div>;\n      }}\n    </Playground>\n    <p>{`You'll notice that it will work on the first key stroke you hit, but after that the value won't change anymore. This is\ncalled stale state. What happened is that we defined a callback that depends on a value which changes over time. In this\ncase it's the `}<inlineCode parentName=\"p\">{`amount`}</inlineCode>{` variable. Our `}<inlineCode parentName=\"p\">{`() => setAmount(amount + 100)`}</inlineCode>{` callback gets memoised inside the `}<inlineCode parentName=\"p\">{`useHotkeys`}</inlineCode>{` hook\nand since we don't define any dependencies our callback will always stay the same and reference the same value it retrieved\nthe first time it got executed. So inside the `}<inlineCode parentName=\"p\">{`useHotkeys`}</inlineCode>{` hook the value of `}<inlineCode parentName=\"p\">{`amount`}</inlineCode>{` will always be `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`, which is the\ninitial value. You can see that for yourself, when copying this example and changing the initial value.\nGoing a step further in our logic flow, this means that our callback will always call `}<inlineCode parentName=\"p\">{`setAmount`}</inlineCode>{` with the value `}<inlineCode parentName=\"p\">{`100`}</inlineCode>{`.\nSo our logic flow got stuck, tis not what we wanted.`}</p>\n    <p>{`To fix this there are two approaches when using values that are retrieved by `}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`. You could define a dependency array as\nthe third parameter like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const AddToBankComponent = () => {\n  const [amount, setAmount] = useState(0);\n\n  useHotkeys('m', () => setAmount(amount + 100), [amount]);\n\n  return (\n    <div>\n      Add {Math.abs(amount)} dollars to my bank account.\n    </div>\n  );\n};\n`}</code></pre>\n    <Playground __position={2} __code={'() => {\\n  const [amount, setAmount] = useState(0)\\n  useHotkeys(\\'m\\', () => setAmount(amount + 100), [amount])\\n\\n  return <div>Add {Math.abs(amount)} dollars to my bank account.</div>\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      useState,\n      useHotkeys\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwdh5FdY12gPAAvP1-TtSDcjgGBnAILJUPQ2V5TNXCIPYKC8hgAAJERthgRI7DQo1KI9OABHIGj8PYQNJQok1NXaMFUF0FFjlOLCSMSLF2G4Oj1iiARnlQK52gABnYJMZiwdo92rGYOxYGdtIAFkM9gADZDOM9YwGAgAxb1oESbT-GcQ4EQdTAYKEfgliIahKDgMyESc6sXJoZwICwy52AARiskz5Ek6SpgAQTmZT2AjKDyBsKB0DDVCOWUsRCujGR2BRRSYG4YBsIUrF5C3GtgBK6ByuCAAyAbxkSeZKGaXqyoq7gZrlMBkMlAZUHadgAH4Nj6sMIyqq5Jv61BMurKQZCrN8zBhdVjhgMAwigKZtuq2qjry5dqwsYAHu4GrgBXCxsvYABtb02hoJYiIIHKwuQggAF0CoYkisgjHS3xrGsGOYghWPYx9rSWT6avByGQYICNgeh9gAGpUp0lGliBqGaBhs63prLoCD6cwY1kHLOzovVojwHBXA8OAycZggOTQk4ElcAQ7AidgiGSDx3F2CUqGhnBjtjFd5EO7cXtOswvxAXjyEkVRsBwAgtAoYD9AYPDLuGLG2LgJZgEx7G4DPVh9E4t12ldn3zU0ATLuABj7HiKBVZ2JYGLPMAwC2AhA-NfhTUlfgVX9GhRu6GOEnj7ZXPMFSIxgf2aCuABpNivDl9A_f0JY_AwWAy3Yb33dbmgqq-9hWEoLg8_OrBBPmqTu3MDGWPdiMfauFFpxSJY4hLiVtiuYu4-38ulkwO4riRAG4ZU8-qp-6t_qPMLqXQPfS_hojn-3iNN_3hOrruD9JIsEnFOacIwE1UqzEOi8fahRgA_IiT9Y6l3_vnNG7NOaFUHjVSB7EcDIQ8KoJe7tkEWCUIDe-o94Hvx2MzPOh1TZRW2K4NI_44DUEAroECBgwI3wsPwVA3pGRIHYPwH4xZqgZHND-MkgiTK8JAP7eWS1-BXH4DpHAaidIhXWPwco5B-gzFnso4RIAcoNTwrAaEWBvTSN_lASgiRcx5AKBOTU5pRF_FLFo6s_AohoCMfwK2Gg4BeLkcfOgmApIQHgEYnhNYdFyX8SAFKOAABM6iQlxMEJqRJKU7I4AABw4DshkuR2C4Bh2CUI_gSYik4BSikkpxjs4WitDkvJhTikgHWIdeQpsxHeA-NQSAKQWFsO0Bwx23D-C0B9FkZRIjTS0HNM080swZj8F6freQQA`} mdxType=\"Playground\">\n  {() => {\n        const [amount, setAmount] = useState(0);\n        useHotkeys('m', () => setAmount(amount + 100), [amount]);\n        return <div>\n    Add {Math.abs(amount)} dollars to my bank account.\n  </div>;\n      }}\n    </Playground>\n    <p>{`But if you look closely this will cause problems. `}<inlineCode parentName=\"p\">{`Amount`}</inlineCode>{` changes with every call, so our callback will be recreated\nevery time. Which means that hotkeys will unbind and bind our callback every time we hit the key stroke. This might\nseem okay but can cause scoping problems and mess up the internals of our application. Also, the idea behind memoisation\nis that we do not execute everything all the time but wait for changes. To fix that we just have to use the callback\napproach for `}<inlineCode parentName=\"p\">{`setAmount`}</inlineCode>{` like in the very first example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const AddToBankComponent = () => {\n  const [amount, setAmount] = useState(0);\n\n  useHotkeys('m', () => setAmount(amount => amount + 100), []);\n\n  return (\n    <div>\n      Add {Math.abs(amount)} dollars to my bank account.\n    </div>\n  );\n};\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}